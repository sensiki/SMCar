C51 COMPILER V9.54   UART                                                                  06/24/2015 09:22:07 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE Source\uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\电机控制) DEBUG OBJECTE
                    -XTEND PRINT(.\uart.lst) TABS(2) OBJECT(uart.obj)

line level    source

   1          /*
   2          版权声明：
   3          WIFI机器人网・机器人创意工作室版权所有 www.wifi-robots.com
   4          您可以任意修改本程序，并应用于自行研发的智能小车机器人及其他电子产品上，但是禁止用于商业牟利。
   5          By WIFI机器人网・机器人创意工作室
   6          */
   7          
   8          #include "uart.h"
   9          #include <stdio.h>
  10          #include "motor.h"
  11          #include "steer.h"
  12          #include "mem.h"
  13          #include "IR.h"
  14          #include "timer.h"
  15          #include "OLED12864.h"
  16          
  17          extern uint16 se_timer[8];
  18          uint8 xdata buffer[3];
  19          uint8 rec_flag=0; //等于0等待接受 等于1正在接受 
  20          extern uchar IR_Type;  
  21          extern uchar IR_Num;
  22          extern uchar Cruising_Flag;
  23          extern uint16 Uart_timeout_count;
  24          extern uchar  Robots_Run_Status;
  25          extern uchar Duty_left,Duty_right; //左右占空比标志，取1--100
  26          
  27          void UART_init(void)
  28          {
  29   1        PCON |= 0x80;   //使能波特率倍速位SMOD
  30   1        SCON = 0x50;    //8位数据,可变波特率
  31   1        BRT = RELOAD_COUNT;   //设定独立波特率发生器重装值
  32   1        AUXR |= 0x04;   //独立波特率发生器时钟为Fosc,即1T
  33   1        AUXR |= 0x01;   //串口1选择独立波特率发生器为波特率发生器
  34   1        AUXR |= 0x10;   //启动独立波特率发生器
  35   1        ES      =   1;    //允许串口中断
  36   1          EA      =   1;    //开总中断
  37   1        TI      =   1;  
  38   1        EX0=0;
  39   1        EX1=0;
  40   1      }
  41          
  42          void UART_send_byte(uint8 byte)
  43          {
  44   1        ES     =   0;  //关串口中断
  45   1          TI     =   0;  //清零串口发送完成中断请求标志
  46   1          SBUF   =   byte;
  47   1          while(TI ==0); //等待发送完成
  48   1          TI     =   1;  //清零串口发送完成中断请求标志
  49   1          ES     =   1;  //允许串口中断
  50   1      }
  51          
  52          void UART_send(uint8 *Buffer, uint8 Length)
  53          {
  54   1        while(Length != 0)
C51 COMPILER V9.54   UART                                                                  06/24/2015 09:22:07 PAGE 2   

  55   1        {
  56   2          UART_send_byte(*Buffer);
  57   2          Buffer++;
  58   2          Length--;
  59   2        }
  60   1      
  61   1      }
  62          
  63          void Communication_Decode(void)  
  64          { 
  65   1        uint8 i;
  66   1      
  67   1        if(buffer[0]==0x00)
  68   1        {
  69   2          switch(buffer[1])
  70   2          {
  71   3            case 0x01:
  72   3                MOTOR_GO_FORWARD; 
  73   3            Robots_Run_Status=0x03;
  74   3            return;
  75   3            case 0x02:MOTOR_GO_BACK;   
  76   3            Robots_Run_Status=0x05;//停止       
  77   3            return;
  78   3            case 0x03:MOTOR_GO_LEFT;
  79   3            Robots_Run_Status=0x02;//左转 
  80   3            return;
  81   3            case 0x04:MOTOR_GO_RIGHT;   
  82   3            Robots_Run_Status=0x01;//右转
  83   3            return;
  84   3            case 0x00:MOTOR_GO_STOP;    
  85   3            Robots_Run_Status=0x04;//停止 
  86   3            return;
  87   3            default: return;
  88   3          } 
  89   2        }
  90   1        else if(buffer[0]==0x01)
  91   1        {
  92   2          if(buffer[2]>180)
  93   2            return;
  94   2          switch(buffer[1])
  95   2          {
  96   3            case 0x01:se_timer[0]=buffer[2]; return;
  97   3            case 0x02:se_timer[1]=buffer[2]; return;
  98   3            case 0x03:se_timer[2]=buffer[2]; return;
  99   3            case 0x04:se_timer[3]=buffer[2]; return;
 100   3            case 0x05:se_timer[4]=buffer[2]; return;
 101   3            case 0x06:se_timer[5]=buffer[2]; return;
 102   3            case 0x07:se_timer[6]=buffer[2]; return;
 103   3            case 0x08:se_timer[7]=buffer[2]; return;
 104   3            default : return;
 105   3          }
 106   2        }
 107   1        else if(buffer[0]==0x02)
 108   1        {
 109   2          switch(buffer[1])
 110   2          {
 111   3            case 0x01:Duty_left=buffer[2]*10;
 112   3              break;
 113   3            case 0x02:Duty_right=buffer[2]*10;
 114   3              break;
 115   3          }
 116   2        }
C51 COMPILER V9.54   UART                                                                  06/24/2015 09:22:07 PAGE 3   

 117   1        else if(buffer[0]==0x04)    //车灯控制使用灌电流方式  FF040100FF  FF040000FF
 118   1        {
 119   2            switch(buffer[1])
 120   2             {
 121   3                 case 0x01:
 122   3               MAINLIGHT_TURNON;
 123   3               break;
 124   3              case 0x00:
 125   3                MAINLIGHT_TURNOFF;
 126   3                break;
 127   3                default:return;
 128   3             }
 129   2                  
 130   2        }
 131   1        else if(buffer[0]==0x05)    //蜂鸣器
 132   1        {
 133   2            switch(buffer[1])
 134   2             {
 135   3                 case 0x01:
 136   3               MAINBUZZER_TURNON;
 137   3               break;
 138   3              case 0x00:
 139   3                MAINBUZZER_TURNOFF;
 140   3                break;
 141   3                default:return;
 142   3             }
 143   2                  
 144   2        }
 145   1        else if(buffer[0]==0x50)    //遥控器红外接收(学习)
 146   1        {
 147   2          if((buffer[1]<5)&&(buffer[2]<10))
 148   2          {
 149   3            IR_Type = buffer[1];
 150   3            IR_Num = buffer[2];
 151   3            IR_Rec(); 
 152   3          }
 153   2          return;       
 154   2        }
 155   1        else if(buffer[0]==0x51)    //遥控器红外发射(控制)
 156   1        {
 157   2          if((buffer[1]<5)&&(buffer[2]<10))
 158   2          {
 159   3            IR_Type = buffer[1];
 160   3            IR_Num = buffer[2];
 161   3            IR_Tra(); 
 162   3          }
 163   2          return;       
 164   2        }
 165   1        else if(buffer[0]==0x13)//模式切换开关
 166   1        {
 167   2            switch(buffer[1])
 168   2          {
 169   3            case 0x01: 
 170   3              Cruising_Flag = 0x01; 
 171   3            break;//跟随
 172   3            case 0x02: 
 173   3              Cruising_Flag = 0x02; 
 174   3              LCD_P6x8Str(16,6,"Mode:Follow Line ");  
 175   3            break;//巡线
 176   3            case 0x03: 
 177   3              Cruising_Flag = 0x03; 
 178   3            break;//避障
C51 COMPILER V9.54   UART                                                                  06/24/2015 09:22:07 PAGE 4   

 179   3            case 0x04: 
 180   3              Cruising_Flag = 0x04; 
 181   3            break;//雷达避障
 182   3            case 0x05: 
 183   3              Cruising_Flag = 0x05; 
 184   3            break;//机械臂演示
 185   3            case 0x06: 
 186   3              Cruising_Flag = 0x06;
 187   3            break;//摇头演示
 188   3            case 0x00: 
 189   3              Cruising_Flag = 0x00; 
 190   3              LCD_P6x8Str(16,6,"Mode:Normal      ");  
 191   3            break;//正常模式
 192   3            default:
 193   3              Cruising_Flag = 0x00; 
 194   3              LCD_P6x8Str(16,6,"Mode:Normal      ");  
 195   3            break;//正常模式
 196   3          }
 197   2        }
 198   1        else if(buffer[0]==0x32)//存储舵机角度
 199   1        {
 200   2            Earse_Section(50*512);
 201   2          for(i=0;i<8;i++)
 202   2          {
 203   3            //Write_Byte(50*512+i,se_timer[i]); 
 204   3          }
 205   2        }
 206   1        else
 207   1        {
 208   2          return;
 209   2        }
 210   1      }
 211          
 212          void UART_Interrupt_Receive(void) interrupt 4
 213          {
 214   1        static uint8 i;
 215   1      
 216   1          if(RI==1)
 217   1          {
 218   2              RI  =   0;
 219   2              if(rec_flag==0)
 220   2          {
 221   3            if(SBUF==0xff)
 222   3            {
 223   4              rec_flag=1; 
 224   4              Uart_timeout_count = 0;
 225   4              i=0;
 226   4            }     
 227   3          }
 228   2          else
 229   2          {
 230   3            if(SBUF==0xff)
 231   3            { 
 232   4              rec_flag=0; 
 233   4              if(i==3)
 234   4              {
 235   5                Communication_Decode(); 
 236   5                //UART_init(); // 解决串口死机问题
 237   5              }
 238   4              i=0;
 239   4            }
 240   3            else
C51 COMPILER V9.54   UART                                                                  06/24/2015 09:22:07 PAGE 5   

 241   3            {
 242   4              buffer[i]=SBUF;
 243   4              i++;
 244   4            }
 245   3          }   
 246   2          }
 247   1          else
 248   1          {
 249   2              TI  =  0;
 250   2          }
 251   1          
 252   1      }
*** WARNING C316 IN LINE 252 OF Source\uart.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    754    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
